# -*- coding: utf-8 -*-
# -*- mode: org -*-

#+TITLE: Le g√©nie logiciel pour un ing√©nieur en /Machine Learning/
#+AUTHOR: K√©vin CAYE
#+LANGUAGE: fr

# reveal options: see https://github.com/yjwen/org-reveal
#+REVEAL_ROOT: ../../js/reveal.js/
#+REVEAL_TRANS: none
#+REVEAL_PLUGINS: (highlight notes)
#+OPTIONS: reveal_center:nil reveal_progress:t reveal_history:nil reveal_control:t
#+OPTIONS: reveal_rolling_links:t reveal_keyboard:t reveal_overview:t num:nil toc:nil
#+OPTIONS: reveal_width:1200 reveal_height:800
#+REVEAL_THEME: white
#+REVEAL_HLEVEL: 1 ## all header on same lvl
#+REVEAL_SPEED: fast
#+REVEAL_EXTRA_CSS: ./extra.css
#+REVEAL_EXTRA_JS: 


* Qui je suis ?
- Ancien Ensimag (promotion 2014)
- Th√®se en m√©thodes statistiques pour la g√©n√©tique
- Prestataire de service chez Kaizen Solution

#+BEGIN_NOTES
- Donc pour moi le g√©nie logiciel c'est un effet bord ! j'ai vaguement abbord√©
  ca √† l'ensimag ....
- Mais c'est indispensable dans mon travail
#+END_NOTES

* Plan et objectifs 

*Objectifs*

Comprendre les outils et m√©thodes de d√©veloppements utilis√©s en /Machine
Learning/.

*Plan*

1. Le paysage du /Machine Learning/
2. Comment mener un projet en /Machine Learning/

#+BEGIN_NOTES
1. Dans une premi√®re partie on va expliquer ce qu'est que le machine learning:
  - ou il est utilis√©
  - quelle sont les diff√©rentes branches
2. On verra comment un projet peut se d√©velopper du d√©but a la fin
   - ca sera l'occasion de voir les outils et m√©thode de travaille
#+END_NOTES
* 1. Le paysage du /machine learning/
:PROPERTIES:
:reveal_background: ./figures/wordle.png
:reveal_background_size: 1000px
:END:
** Qu'est ce que le /Machine Learning/ ?
*Approche traditionnel*
#+HTML: <img src="./figures/traditional_workflow.png" align="middle">

#+BEGIN_NOTES
Exemple: faire un filtre anti spam 
1. on annalyse les spam et on reparque que certain mots cl√©es: gratuit, carte de cr√©dit
2. on √©crit des filtre a la main pour chaque cas
3. on test et on r√©p√®te 
#+END_NOTES
** Qu'est ce que le /Machine Learning/ ?
*Approche /Machine Learning/*
#+HTML: <img src="./figures/ml_workflow.png" align="middle">

#+BEGIN_NOTES
Exemple: 
- on si on fait du machine learning l'algorithme qui detecte les spams va
  chercher a trouver automatiquement les r√®gles qui font qu'in spam est un spam
#+END_NOTES
** Pourquoi utiliser le /Machine Learning/ ?
*Le /machine Learning/ est parfait pour*

- les probl√®mes r√©solus en √©num√©rant un grand nombre de r√®gles
- les probl√®mes tr√®s complexes ou trouver toutes les r√®gles serait impossible
- les probl√®mes ou les r√®gles peuvent changer, ou il faut s'adapter √† de
  nouvelles donn√©es

*Exemples*

- filtre anti spam
- reconnaissance vocale
- d√©tection de fautes sur des machines industrielles

** Apprentissage supervis√©
*Un jeu de donn√©es labellis√©*
#+HTML: <img src="./figures/sup_ml0.png" align="middle">
** Apprentissage supervis√©
*R√©gression*
#+HTML: <img src="./figures/sup_ml1.png" align="middle">
** Apprentissage supervis√©
*Exemples d'algorithme*
- r√©gression lin√©aire
- arbres de d√©cision
- SVM (/Support Vector Machine/)
- r√©seaux de neurones
- et bien d'autres...
** Apprentissage non supervis√©
*Un jeu de donn√©es NON labellis√©*
#+HTML: <img src="./figures/unsup_ml0.png" align="middle">
** Apprentissage non supervis√©
*/Clustering/*
#+HTML: <img src="./figures/unsup_ml1.png" align="middle">
** Apprentissage non supervis√©
Quelques exemples d'algorithme: 

*/Clustering/*
- k-Means
*Visualisation et r√©duction de la dimension*
- Analyse en composant principale
*R√®gle d'association*
- Apriori
#+BEGIN_NOTES
L'id√©e sous jacente est de trouver une structure aux donn√©es, un moyen de les
repr√©senter pour:
- identifier des donn√©es annormals (outlier)
- d√©couvrir que les personnes qui ach√®te de la sauce barbecue et des chips ch√®te
  aussi en g√©n√©ral des steaks ü§ì. 
#+END_NOTES

** Apprentissage semi supervis√©
*Un jeu de donn√©es partiellement labellis√©*
#+HTML: <img src="./figures/semisup_ml0.png" align="middle">
#+BEGIN_NOTES
Exemple classique: 
- quand on charge ses photos sur google photo il reconna√Æt seul les m√™mes
  personnes sur les diff√©rentes photos (clustering).
- il suffit de labelliser une seul fois la personne sur une des photos pour que
  tout le groupe soit labellis√©.
#+END_NOTES
** Test et validation des algorithmes                             :noexport:

*Mesure de la performance*
Par exemple l'erreur absolue moyenne:

$$ MAE = \frac{1}{n} \sum_{i =1}^{n} |Y_i - \hat{Y_i}| $$

*Donn√©es de validation*

Ce sont des donn√©es qui n'ont jamais √©t√© vu par les algorithmes, typiquement $20
\%$ des donn√©es.

*No Free Lunch Theorem ([[https://en.wikipedia.org/wiki/No_free_lunch_theorem][wikipedia]])*

Il n'y pas de mod√®le universelle, qui serait le meilleur tout le temps.

* 2. Comment mener un projet /Machine Learning/ ?

*Objectif* Pr√©dire le prix de l'immobilier en Californie.

#+HTML: <img src="./figures/housing_californie.jpg" align="middle" width=600>

#+BEGIN_NOTES
Le diable est dans les d√©tails donc je vais tacher de donner ces petit details
d'organisation qui peuvent faire gagner du temps.

On va voir les points cl√©es

#+END_NOTES
** Projet /Machine Learning/: principales √©tapes

1. Comprendre le probl√®me
2. Rassembler les donn√©es 
3. D√©couvrir et visualis√© les donn√©es
4. Cr√©er les mod√®les
5. D√©ployer le syst√®me

** Cr√©er un dossier pour le projet @@html:<img src="./figures/logo_git.png" width="110" height="46" alt="Git" style="border: 0;" />@@ !!
:LOGBOOK:
- Note taken on [2019-01-04 ven. 11:33] \\
  https://blog.algorithmia.com/becoming-a-10x-data-scientist/#prod
:END:

#+BEGIN_EXAMPLE
‚îú‚îÄ‚îÄ Makefile           <- avec des commandes comme make data ou make train
‚îú‚îÄ‚îÄ README.md          <- Point de d√©part pour un nouvel arrivant sur le projet
‚îú‚îÄ‚îÄ data
‚îÇ   ‚îú‚îÄ‚îÄ external       <- Donn√©es venant d'un tierce
‚îÇ   ‚îú‚îÄ‚îÄ interim        <- Donn√©es transform√©es interm√©diaires
‚îÇ   ‚îú‚îÄ‚îÄ processed      <- Donn√©es finales, pr√®tes pour les algos
‚îÇ   ‚îî‚îÄ‚îÄ raw            <- Les donn√©es d'origine, immuables ! 
‚îÇ
‚îú‚îÄ‚îÄ docs               <- La documentation du projet (exemple: Sphinx ou MkDocs)
‚îÇ
‚îú‚îÄ‚îÄ models             <- Mod√®les entrain√©s
‚îÇ
‚îú‚îÄ‚îÄ notebooks          <- Les notebooks (exemple: Jupyter, Rmarkdown)
‚îÇ
‚îú‚îÄ‚îÄ references         <- Manuel, pr√©sentation, doc etc.
‚îÇ
‚îú‚îÄ‚îÄ reports            <- Rapports
‚îÇ   ‚îî‚îÄ‚îÄ figures        <- figures des rapports
‚îÇ
‚îú‚îÄ‚îÄ requirements.txt   <- Pour reproduire l'environnement de l'analyse, exemple
‚îÇ                         g√©n√©r√© avec `pip freeze > requirements.txt`
‚îÇ
‚îú‚îÄ‚îÄ src                <- Code source du projet (package python/R)
#+END_EXAMPLE

#+BEGIN_NOTES
Mais avant de commencer il faut cr√©er un espace de travaille !
#+END_NOTES

** 1. Comprendre le probl√®me
*** Comprendre le probl√®me
*Pourquoi le client a besoin de cette algorithme ?*
#+BEGIN_QUOTE
Le client veut savoir si il a int√©r√™t √† investir dans un quartier. Pour cela il
lui faut le prix m√©dian du quartier.
#+END_QUOTE
*** Comprendre le probl√®me
*Comment cet algorithme sera utilis√© ? Dans quel environnent ?*

#+HTML: <img src="./figures/pipeline.png" align="middle">

*** Comprendre le probl√®me
*Existe t-il une solution actuellement ?*
#+BEGIN_QUOTE
La valeur est estim√©e par des experts ou des r√®gles compliqu√©es.
#+END_QUOTE

#+BEGIN_NOTES
Cela donne une m√©thode de base pour √©valuer notre proposition de nouvelle
m√©thode.
#+END_NOTES

*** Mod√©lisation du probl√®me
*De quelle type d'algorithme d'apprentissage avons nous besoins ?*

#+ATTR_REVEAL: :frag roll-in
*/Machine Learning/ supervis√©:* en particulier il s'agit d'un probl√®me de
r√©gression multiple (/multivariate regression/ en anglais).

*** Choisir la m√©trique d'√©valuation
*√áa d√©pend du probl√®me !*

- Interpr√©table par le client ?
  $$RMSE = \sqrt{\frac{1}{n} \sum_{i =1}^{n} (Y_i - \hat{Y_i})^2}$$
- Plus dure a interpr√©ter mais utile ? 
  $$ R2 = 1 - \frac{\sum_{i =1}^{n} (Y_i - \hat{Y_i})^2}{\sum_{i =1}^{n} (Y_i - \bar{Y})^2} $$

#+BEGIN_NOTES
- La m√©trique d√©pend du probl√®me !
- mais comme c'est avec ca qu'on √©valuation la performance il est tr√®s impotante de
  bien la comprendre ! 
#+END_NOTES
** 2. Rassembler les donn√©es 
*** Quelles donn√©es ?
*Les donn√©es du client ?*

*Des donn√©es publiques ?*
- par exemple la m√©t√©o ?

*Des donn√©es simul√©es ?*
- tr√®s utile pour tester les algorithmes
- peut permettre d'agrandir le jeux de donn√©es

#+BEGIN_NOTES
- Il faut commencer par r√©cup√©rer les donn√©es du client dans le cas de l'exemple
  il s'agit des donn√©es des prix m√©dian ainsi que d'autre statistique sur
  diff√©rent quartier de Californie
- il peut y avoir une diff√©rence de m√©t√©o selon les quartiers 
- Quand l'algorithme devra pr√©dire le prix pour des nouveaux quartiers pourront
  rassembler ces donn√©es ? A quel prix ? Il n'est pas forcement facile d'aller
  r√©cup√©rer les donn√©es m√©t√©o.
#+END_NOTES
*** Quelles donn√©es ?

*donn√©es dynamique ?*
- Consommation √©nerg√©tique d'un b√¢timent

*Pourront nous avoir acc√®s √† ces donn√©es quand l'algorithme sera en production
 ?*
- donn√©es m√©t√©o

*Big data ?*
- donn√©es de log de machine industriel

#+BEGIN_NOTES
Quelques question qu'on peut se poser sur les donn√©es
#+END_NOTES

*** La natures des donn√©es ?
:LOGBOOK:
- Note taken on [2019-01-07 lun. 11:50] \\
  insert image
:END:

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
*Donn√©es tabulaires*
#+HTML: <img src="./figures/dataframe.png" align="middle" width=200>

*Les donn√©es s√©quentielles*
#+HTML: <img src="./figures/ts.jpeg" align="middle" width=200>

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
*Les images*
#+HTML: <img src="./figures/cat.jpg" align="middle" width=200>

*Donn√©es textuelles*
#+HTML: <img src="./figures/text.jpeg" align="middle" width=200>

#+REVEAL_HTML: </div>

#+BEGIN_NOTES
A quelle type de donn√©es on est habituellement confront√©s
#+END_NOTES

*** TODO Structure de donn√©es: /DataFrame/

insert cette image [[https://www.google.com/search?q=dataframe+structure+representation&rlz=1C1GCEA_enFR773FR773&source=lnms&tbm=isch&sa=X&ved=0ahUKEwibo5Wj8tPfAhVD8hQKHW-xCWYQ_AUIDigB&biw=1536&bih=723#imgrc=khvRhkwTvwexiM:][here]]

*Avantages*
- op√©ration classique sur les base donn√©es
- repr√©sentation classique $observations \times features$
- facile a parall√©liser

*Library*
- R: =dplyr=
- python: =pandas=

#+BEGIN_NOTES
- Il existe de nombreux moyen de repr√©sent√© les donn√©es mais pour travailler on
  utilise tr√®s souvent des data frame.
- C'est la structure de donn√©es utilis√© pendant la phase d'exploration des donn√©es
#+END_NOTES

*** Structure de donn√©es: /Tensor/

[[https://www.google.com/search?q=tensor+data+structure&rlz=1C1GCEA_enFR773FR773&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjo78_B8tPfAhWbBWMBHZwcB2IQ_AUIDigB&biw=1536&bih=723#imgrc=qe54JoUROxNuyM][get image here]]

*Avantages*
- algorithmes fonctionnent bien avec ces structure de donn√©es
- parfait pour repr√©senter des images ou des s√©ries temporels
- alg√®bre lin√©aire

*Library*
- =TensorFlow=
- =Numpy=

#+BEGIN_NOTES
- c'est la structure de donn√©es des algorithmes de machine learning
#+END_NOTES

*** Notre exemple : /California Housing Prices dataset/

#+HTML: <img src="./figures/cal_map.png" align="middle" width=600>

- Donn√©es statique
- /Small data/: √ßa tient sur un ordinateur

*** TODO Notre exemple : /California Housing Prices dataset/

- Donn√©es accessible en production
#+BEGIN_EXAMPLE
mettre la liste des colonnes
#+END_EXAMPLE

** 3. D√©couvrir et visualis√© les donn√©es
*** Choisir un langage programmation ?
*R*
- communaut√© centr√©e autour des /data science/
- √©tat de l'art des m√©thodes statistique

*python*
- tr√®s grande communaut√© de d√©veloppeurs, langage /√©l√©gant/
- vision par ordinateur

*Choisir un paradigme de programmation ?*
- programmation fonctionnelle
- programmation orient√©e objet
  
#+BEGIN_NOTES
- si vous vous int√©resser au machine learning, ces deux langages ressorte
- Ce qui est sur c'est qu'a cette √©tape de prototypage il faut pouvoir avancer
  vite, ces deux langage on une grosse communaut√© et des environnements adapt√©
  au machine learning.
- si je devais en choisir un ca serai le R: 
  - communaut√© plus petite et centr√© autour des data science
  - outils de traitement et vizualisation de donn√©es plus puissant
  - language plutot fonctionnel
- une question qu'on se pose jamais c'est le choix de paradigme de programmation
  - pour simplifier ca veut dire coder en suivant quelque r√®gle/habitude
  - pour SIMPLIFIER on peut distinguer deux grands paradigmes, qui sont pas
    forc√©ment disjoint
#+END_NOTES
*** TODO Programmation orient√© objet

*En quelques mots*
- on d√©compose le probl√®me en objets
- concept d'objets: attribues, h√©ritage, interaction entre objets
- programmation imp√©rative: modification de l'√©tat internes des objets

*Avantages*
- permet de concevoir des logiciels complexes
[[https://www.google.com/url?sa=i&source=imgres&cd=&ved=2ahUKEwjWk-7WidzfAhVLUxoKHdSpAqsQjRx6BAgBEAU&url=https%253A%252F%252Fwww.amazon.fr%252FDesign-Patterns-Elements-Reusable-Object-Oriented-ebook%252Fdp%252FB000SEIBB8&psig=AOvVaw2yjVHCZtSp-N9Cf8v2pQUN&ust=1546964419118577][Image]] 

#+BEGIN_NOTES
- un probl√®me est d√©compos√© en object avec des √©tats internes et des interaction
  en ces objects
#+END_NOTES
*** Programmation orient√© objet: exemple en python
On veux ajouter les √©l√©ments d'un tableau 

#+BEGIN_SRC python :results output :exports both :eval no-export 
class Array:
    def __init__(self, data):
        self.data = data

    def add(self, t2):
        for i in range(len(self.data)):
            self.data[i] = t2.data[i] + self.data[i]

a1 = Array([1,2,3])
a2 = Array([3,8,6])
a1.add(a2)
print(a1.data)
#+END_SRC

#+RESULTS:
: [4, 10, 9]

#+BEGIN_NOTES
- On commence par creer un objet et on lui d√©finie une m√©thodes.
#+END_NOTES

*** Programmation fonctionnelle 
:LOGBOOK:
- Note taken on [2019-01-07 lun. 17:50] \\
  [[https://docs.python.org/3/howto/functional.html][python doc: Functional Programming HOWTO]]
- Note taken on [2019-01-07 lun. 17:14] \\
  [[https://fr.wikipedia.org/wiki/Programmation_fonctionnelle][wikipedia]]
:END:

*En quelques mots*
- on d√©compose le probl√®me en fonctions
- concept de fonctions: fonctions pures, lamda-fonction, r√©cursion
- programmation d√©clarative: composants logiciels ind√©pendants du contexte et ne
  comportant aucun √©tat interne.

*Avantages*
- plus simple a tester
- concept de pipeline de donn√©es
- parall√©lisation sur plusieurs machines/core

#+BEGIN_NOTES
- On d√©compose le probl√®me en fonctions imbriqu√©es, les fonctions on une etr√© et
  une sortie et sont pures ! 
#+END_NOTES
*** Programmation fonctionnelle: un exemple en python 
On veux ajouter les √©l√©ments d'un tableau 

#+BEGIN_SRC python :results output :exports both :eval no-export 
def add(x, y):
    return x + y

a1 = [1,2,3]
a2 = [3,8,6]

print(map(add, a1, a2))
#+END_SRC

#+RESULTS:
: [4, 10, 9]

#+BEGIN_NOTES
- on utilise les types de base python et on cherche d√©couper la tache en
  fonctions
#+END_NOTES

*** TODO Cr√©er un environnement isol√© et reproductible 
*Pourquoi ?*
- Pour reproduire les r√©sultats
- Facilite la mise en production 

*Exemple d'outils*
- Python =virtualenv=
- =conda=

#+BEGIN_SRC shell
conda create -n california_env python=3.6 numpy pandas scikit-learn 
#+END_SRC

#+BEGIN_NOTES

#+END_NOTES

*** TODO Les notebooks
[[http://arogozhnikov.github.io/images/jupyter/example-notebook.png][image]]

*Exemple de notebook*
- Jupyter notebook 
- Rmarkdown

#+BEGIN_NOTES
- un notebooks un environnement de d√©vellopement ou on peut coder et decrire ce
  que l'on code (litterate programming)
- les sorties du code sont captur√© et peuvent √™tre reprise plus tard
#+END_NOTES

*** TODO Trop de notebooks, tue le notebook                      :noexport:
- see notebook war ! https://yihui.name/en/2018/09/notebook-war/
- quand les utiliser et quand s'arr√™ter !
*** TODO Notre exemple : visualisation des donn√©es 
plot page 55
plot page 58
** 4. Cr√©er les mod√®les
*** Cr√©er une strat√©gie d'√©valuation

*Donn√©es de test*

- Ce sont des donn√©es qui n'ont jamais √©t√© vu par les algorithmes, typiquement
  $20 \%$ des donn√©es.
- √âvaluer l'erreur du mod√®le sur des nouvelle donn√©es

*Donn√©es de validation*
- Ce sont des donn√©es utilis√© pour valider la phase d'apprentissage
- choisir les hyperparam√®tres

#+BEGIN_NOTES
- Critique ! 
- Il faut que le dataset de test/validation soient repr√©sentatifs d'un nouveau
  dataset.
#+END_NOTES

*** Cr√©er une strat√©gie d'√©valuation

*Donn√©es structur√©es ?*
#+HTML: <img src="./figures/ts_val_test.png" align="middle" width=600>

*** TODO Cr√©er une strat√©gie d'√©valuation

*Notre exemples*
image livre (bar plot)

*** Cr√©er des mod√®les

*C'est partie pour le code !*

- Faire des packages: R et python sont tr√®s bien pour ca
- documenter les fonctions: R: Roxygen, python: docstring

*TDD: /Test Driven Development/*

- python: =pytest=, R: =testthat=
- c'est plus simple en programmation fonctionnelle car pas d'effets de bord

*** √âvaluation et /tuning/ des mod√®les par la validation crois√©e

#+HTML: <img src="./figures/cv.png" align="middle">

*** Choix d'un mod√®le ?

*Crit√®res*

- Performance: CV, erreur sur donn√©es validation
- Facile √† mettre en production: 
  - je peux l'int√©grer sur la plate-forme de production ?
- Facile √† d√©boguer
  - si le mod√®le donne de mauvais r√©sultats 
- Interpretable
  - je peux comprendre pourquoi cette pr√©diction ? 
*** TODO Notre exemple
√©crire un mod√®le lin√©aire

** 5. D√©ployer le syst√®me
*** D√©ployer le mod√®le

Maintenant qu'on a un mod√®le il faut l'int√©grer dans le syst√®me du client !

*Questions*
- Comment ce connect√© √† la base de donn√©es ? 
- Comment de RAM pour notre mod√®le ?
- Logging ?
- Comment passer √† l'√©chelle ?
- ...

#+BEGIN_NOTES
- On arr√®te de s'amuser !!!
- C'est une Etape tr√®s d√©pendante de l'environnement du client mais il y a
  quelques points questions cl√©es.
- on des pr√©occupation de mise en production ! 
#+END_NOTES
*** TODO /Developpement/ - /Operations/
slide 6

#+BEGIN_NOTES
Quand on cherche √† d√©ployer un model
On a traditionnellement d'un cot√© 
- le d√©veloppement logiciel 
- operations: administration des infrastructures informatiques 
#+END_NOTES

*** TODO Dev-Ops
slide 7

#+BEGIN_NOTES
Une facon plus moderne de travailler consiste √† unifier Dev et Ops
En pratique : Quelles sources sont attendues ? Comment ajouter mes sources ?

Le devops est un mouvement en ing√©nierie informatique et une pratique technique
visant √† l'unification du d√©veloppement logiciel (dev) et de l'administration
des infrastructures informatiques (ops), notamment l'administration syst√®me.
#+END_NOTES

*** TODO Architecture orient√©e services
slide 20 
#+BEGIN_NOTES
- Pour unifier le developpement et op√©ration une pratique courante est fournir des API! 
- Notre service (ici la pr√©diction du prix de l'immobilier)
- dans ce composant on g√®re le dev, le mod√®le et l'infrastructure ! 
#+END_NOTES

** TODO Conclusion
slide 4 la boucle
* R√©f√©rences
- [[http://shop.oreilly.com/product/0636920052289.do][Hands-On Machine Learning with Scikit-Learn and TensorFlow]]
- [[https://fr.slideshare.net/Hadoop_Summit/how-to-deploy-machine-learning-models-into-production][How to deploy machine learning models into production]], [[https://www.youtube.com/watch?v=-UYyyeYJAoQ][youtube]]
